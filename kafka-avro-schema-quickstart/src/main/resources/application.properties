quarkus.devservices.enabled=false

# automatically register the schema with the registry, if not present
kafka.apicurio.registry.auto-register=true
kafka.auto.offset.reset=earliest

# Consumer
# set the topic name for the incoming channel to `movies`, as it's not the channel name
mp.messaging.incoming.movies-from-kafka.topic=movies
# set the connector for the incoming channel to `smallrye-kafka`
mp.messaging.incoming.movies-from-kafka.connector=smallrye-kafka
# set the topic name for the channel to `movies`
mp.messaging.incoming.movies-from-kafka.topic=movies
# disable auto-commit, Reactive Messaging handles it itself
mp.messaging.incoming.movies-from-kafka.enable.auto.commit=false
mp.messaging.incoming.movies-from-kafka.auto.offset.reset=earliest

# Producer 
# set the connector for the outgoing channel to `smallrye-kafka`
mp.messaging.outgoing.movies.connector=smallrye-kafka
# set the topic name for the channel to `movies`
mp.messaging.outgoing.movies.topic=movies
# automatically register the schema with the registry, if not present
mp.messaging.outgoing.movies.apicurio.registry.auto-register=true

mp.messaging.outgoing.movies.apicurio.auth.service.token.endpoint=${RHOAS_SERVICE_ACCOUNT_OAUTH_TOKEN_URL:https://sso.redhat.com/auth/realms/redhat-external/protocol/openid-connect/token}
mp.messaging.outgoing.movies.apicurio.auth.client.id=${RHOAS_SERVICE_ACCOUNT_CLIENT_ID}
mp.messaging.outgoing.movies.apicurio.auth.client.secret=${RHOAS_SERVICE_ACCOUNT_CLIENT_SECRET}

kafka.apicurio.registry.url=${SERVICE_REGISTRY_URL}${SERVICE_REGISTRY_CORE_PATH}

kafka.bootstrap.servers=${KAFKA_HOST}
kafka.security.protocol=SASL_SSL

kafka.sasl.mechanism=OAUTHBEARER
kafka.sasl.jaas.config=org.apache.kafka.common.security.oauthbearer.OAuthBearerLoginModule required \
  oauth.client.id="${RHOAS_SERVICE_ACCOUNT_CLIENT_ID}" \
  oauth.client.secret="${RHOAS_SERVICE_ACCOUNT_CLIENT_SECRET}" \
  oauth.token.endpoint.uri="${RHOAS_SERVICE_ACCOUNT_OAUTH_TOKEN_URL}" ;
kafka.sasl.login.callback.handler.class=io.strimzi.kafka.oauth.client.JaasClientOauthLoginCallbackHandler
